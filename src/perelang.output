Grammar

    0 $accept: programa $end

    1 programa: %empty
    2         | INICI llistainst FINAL

    3 llistainst: %empty
    4           | llistainst inst
    5           | llistainst ambit
    6           | llistainst condicional

    7 ambit: INICI aux_ambit llistainst FINAL

    8 condicional: IF llistainst FI
    9            | IF llistainst ELSE llistainst FI

   10 aux_ambit: %empty

   11 inst: ';'
   12     | decla ';'
   13     | asig ';'
   14     | error ';'

   15 decla: tipus llistaid
   16      | scope tipus llistaid

   17 scope: GLOBAL

   18 tipus: INT
   19      | REAL
   20      | CHAR
   21      | BOOLEAN

   22 llistaid: ID
   23         | llistaid ',' ID

   24 asig: ID '=' aux expr

   25 aux: %empty

   26 expr: expr '+' expr
   27     | expr '-' expr
   28     | expr '*' expr
   29     | expr '/' expr
   30     | expr '=' expr
   31     | '(' expr ')'
   32     | ID
   33     | VINT
   34     | VREAL
   35     | VCHAR
   36     | VBOOLEAN


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 31
    ')' (41) 31
    '*' (42) 28
    '+' (43) 26
    ',' (44) 23
    '-' (45) 27
    '/' (47) 29
    ';' (59) 11 12 13 14
    '=' (61) 24 30
    error (256) 14
    ID <name> (258) 22 23 24 32
    VINT <enter> (259) 33
    VREAL <real> (260) 34
    VCHAR <caracter> (261) 35
    VBOOLEAN <caracter> (262) 36
    INT (263) 18
    REAL (264) 19
    CHAR (265) 20
    BOOLEAN (266) 21
    GLOBAL (267) 17
    INICI (268) 2 7
    FINAL (269) 2 7
    IF (270) 8 9
    FI (271) 8 9
    ELSE (272) 9


Nonterminals, with rules where they appear

    $accept (27)
        on left: 0
    programa <sense_atribut> (28)
        on left: 1 2
        on right: 0
    llistainst <sense_atribut> (29)
        on left: 3 4 5 6
        on right: 2 4 5 6 7 8 9
    ambit <sense_atribut> (30)
        on left: 7
        on right: 5
    condicional <sense_atribut> (31)
        on left: 8 9
        on right: 6
    aux_ambit <sense_atribut> (32)
        on left: 10
        on right: 7
    inst <sense_atribut> (33)
        on left: 11 12 13 14
        on right: 4
    decla <sense_atribut> (34)
        on left: 15 16
        on right: 12
    scope (35)
        on left: 17
        on right: 16
    tipus <tipus_b> (36)
        on left: 18 19 20 21
        on right: 15 16
    llistaid <tipus_b> (37)
        on left: 22 23
        on right: 15 16 23
    asig <sense_atribut> (38)
        on left: 24
        on right: 13
    aux <tipus_b> (39)
        on left: 25
        on right: 24
    expr <tipus_b> (40)
        on left: 26 27 28 29 30 31 32 33 34 35 36
        on right: 24 26 27 28 29 30 31


State 0

    0 $accept: . programa $end

    INICI  shift, and go to state 1

    $default  reduce using rule 1 (programa)

    programa  go to state 2


State 1

    2 programa: INICI . llistainst FINAL

    $default  reduce using rule 3 (llistainst)

    llistainst  go to state 3


State 2

    0 $accept: programa . $end

    $end  shift, and go to state 4


State 3

    2 programa: INICI llistainst . FINAL
    4 llistainst: llistainst . inst
    5           | llistainst . ambit
    6           | llistainst . condicional

    error    shift, and go to state 5
    ID       shift, and go to state 6
    INT      shift, and go to state 7
    REAL     shift, and go to state 8
    CHAR     shift, and go to state 9
    BOOLEAN  shift, and go to state 10
    GLOBAL   shift, and go to state 11
    INICI    shift, and go to state 12
    FINAL    shift, and go to state 13
    IF       shift, and go to state 14
    ';'      shift, and go to state 15

    ambit        go to state 16
    condicional  go to state 17
    inst         go to state 18
    decla        go to state 19
    scope        go to state 20
    tipus        go to state 21
    asig         go to state 22


State 4

    0 $accept: programa $end .

    $default  accept


State 5

   14 inst: error . ';'

    ';'  shift, and go to state 23


State 6

   24 asig: ID . '=' aux expr

    '='  shift, and go to state 24


State 7

   18 tipus: INT .

    $default  reduce using rule 18 (tipus)


State 8

   19 tipus: REAL .

    $default  reduce using rule 19 (tipus)


State 9

   20 tipus: CHAR .

    $default  reduce using rule 20 (tipus)


State 10

   21 tipus: BOOLEAN .

    $default  reduce using rule 21 (tipus)


State 11

   17 scope: GLOBAL .

    $default  reduce using rule 17 (scope)


State 12

    7 ambit: INICI . aux_ambit llistainst FINAL

    $default  reduce using rule 10 (aux_ambit)

    aux_ambit  go to state 25


State 13

    2 programa: INICI llistainst FINAL .

    $default  reduce using rule 2 (programa)


State 14

    8 condicional: IF . llistainst FI
    9            | IF . llistainst ELSE llistainst FI

    $default  reduce using rule 3 (llistainst)

    llistainst  go to state 26


State 15

   11 inst: ';' .

    $default  reduce using rule 11 (inst)


State 16

    5 llistainst: llistainst ambit .

    $default  reduce using rule 5 (llistainst)


State 17

    6 llistainst: llistainst condicional .

    $default  reduce using rule 6 (llistainst)


State 18

    4 llistainst: llistainst inst .

    $default  reduce using rule 4 (llistainst)


State 19

   12 inst: decla . ';'

    ';'  shift, and go to state 27


State 20

   16 decla: scope . tipus llistaid

    INT      shift, and go to state 7
    REAL     shift, and go to state 8
    CHAR     shift, and go to state 9
    BOOLEAN  shift, and go to state 10

    tipus  go to state 28


State 21

   15 decla: tipus . llistaid

    ID  shift, and go to state 29

    llistaid  go to state 30


State 22

   13 inst: asig . ';'

    ';'  shift, and go to state 31


State 23

   14 inst: error ';' .

    $default  reduce using rule 14 (inst)


State 24

   24 asig: ID '=' . aux expr

    $default  reduce using rule 25 (aux)

    aux  go to state 32


State 25

    7 ambit: INICI aux_ambit . llistainst FINAL

    $default  reduce using rule 3 (llistainst)

    llistainst  go to state 33


State 26

    4 llistainst: llistainst . inst
    5           | llistainst . ambit
    6           | llistainst . condicional
    8 condicional: IF llistainst . FI
    9            | IF llistainst . ELSE llistainst FI

    error    shift, and go to state 5
    ID       shift, and go to state 6
    INT      shift, and go to state 7
    REAL     shift, and go to state 8
    CHAR     shift, and go to state 9
    BOOLEAN  shift, and go to state 10
    GLOBAL   shift, and go to state 11
    INICI    shift, and go to state 12
    IF       shift, and go to state 14
    FI       shift, and go to state 34
    ELSE     shift, and go to state 35
    ';'      shift, and go to state 15

    ambit        go to state 16
    condicional  go to state 17
    inst         go to state 18
    decla        go to state 19
    scope        go to state 20
    tipus        go to state 21
    asig         go to state 22


State 27

   12 inst: decla ';' .

    $default  reduce using rule 12 (inst)


State 28

   16 decla: scope tipus . llistaid

    ID  shift, and go to state 29

    llistaid  go to state 36


State 29

   22 llistaid: ID .

    $default  reduce using rule 22 (llistaid)


State 30

   15 decla: tipus llistaid .
   23 llistaid: llistaid . ',' ID

    ','  shift, and go to state 37

    $default  reduce using rule 15 (decla)


State 31

   13 inst: asig ';' .

    $default  reduce using rule 13 (inst)


State 32

   24 asig: ID '=' aux . expr

    ID        shift, and go to state 38
    VINT      shift, and go to state 39
    VREAL     shift, and go to state 40
    VCHAR     shift, and go to state 41
    VBOOLEAN  shift, and go to state 42
    '('       shift, and go to state 43

    expr  go to state 44


State 33

    4 llistainst: llistainst . inst
    5           | llistainst . ambit
    6           | llistainst . condicional
    7 ambit: INICI aux_ambit llistainst . FINAL

    error    shift, and go to state 5
    ID       shift, and go to state 6
    INT      shift, and go to state 7
    REAL     shift, and go to state 8
    CHAR     shift, and go to state 9
    BOOLEAN  shift, and go to state 10
    GLOBAL   shift, and go to state 11
    INICI    shift, and go to state 12
    FINAL    shift, and go to state 45
    IF       shift, and go to state 14
    ';'      shift, and go to state 15

    ambit        go to state 16
    condicional  go to state 17
    inst         go to state 18
    decla        go to state 19
    scope        go to state 20
    tipus        go to state 21
    asig         go to state 22


State 34

    8 condicional: IF llistainst FI .

    $default  reduce using rule 8 (condicional)


State 35

    9 condicional: IF llistainst ELSE . llistainst FI

    $default  reduce using rule 3 (llistainst)

    llistainst  go to state 46


State 36

   16 decla: scope tipus llistaid .
   23 llistaid: llistaid . ',' ID

    ','  shift, and go to state 37

    $default  reduce using rule 16 (decla)


State 37

   23 llistaid: llistaid ',' . ID

    ID  shift, and go to state 47


State 38

   32 expr: ID .

    $default  reduce using rule 32 (expr)


State 39

   33 expr: VINT .

    $default  reduce using rule 33 (expr)


State 40

   34 expr: VREAL .

    $default  reduce using rule 34 (expr)


State 41

   35 expr: VCHAR .

    $default  reduce using rule 35 (expr)


State 42

   36 expr: VBOOLEAN .

    $default  reduce using rule 36 (expr)


State 43

   31 expr: '(' . expr ')'

    ID        shift, and go to state 38
    VINT      shift, and go to state 39
    VREAL     shift, and go to state 40
    VCHAR     shift, and go to state 41
    VBOOLEAN  shift, and go to state 42
    '('       shift, and go to state 43

    expr  go to state 48


State 44

   24 asig: ID '=' aux expr .
   26 expr: expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '=' expr

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50
    '*'  shift, and go to state 51
    '/'  shift, and go to state 52
    '='  shift, and go to state 53

    $default  reduce using rule 24 (asig)


State 45

    7 ambit: INICI aux_ambit llistainst FINAL .

    $default  reduce using rule 7 (ambit)


State 46

    4 llistainst: llistainst . inst
    5           | llistainst . ambit
    6           | llistainst . condicional
    9 condicional: IF llistainst ELSE llistainst . FI

    error    shift, and go to state 5
    ID       shift, and go to state 6
    INT      shift, and go to state 7
    REAL     shift, and go to state 8
    CHAR     shift, and go to state 9
    BOOLEAN  shift, and go to state 10
    GLOBAL   shift, and go to state 11
    INICI    shift, and go to state 12
    IF       shift, and go to state 14
    FI       shift, and go to state 54
    ';'      shift, and go to state 15

    ambit        go to state 16
    condicional  go to state 17
    inst         go to state 18
    decla        go to state 19
    scope        go to state 20
    tipus        go to state 21
    asig         go to state 22


State 47

   23 llistaid: llistaid ',' ID .

    $default  reduce using rule 23 (llistaid)


State 48

   26 expr: expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '=' expr
   31     | '(' expr . ')'

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50
    '*'  shift, and go to state 51
    '/'  shift, and go to state 52
    '='  shift, and go to state 53
    ')'  shift, and go to state 55


State 49

   26 expr: expr '+' . expr

    ID        shift, and go to state 38
    VINT      shift, and go to state 39
    VREAL     shift, and go to state 40
    VCHAR     shift, and go to state 41
    VBOOLEAN  shift, and go to state 42
    '('       shift, and go to state 43

    expr  go to state 56


State 50

   27 expr: expr '-' . expr

    ID        shift, and go to state 38
    VINT      shift, and go to state 39
    VREAL     shift, and go to state 40
    VCHAR     shift, and go to state 41
    VBOOLEAN  shift, and go to state 42
    '('       shift, and go to state 43

    expr  go to state 57


State 51

   28 expr: expr '*' . expr

    ID        shift, and go to state 38
    VINT      shift, and go to state 39
    VREAL     shift, and go to state 40
    VCHAR     shift, and go to state 41
    VBOOLEAN  shift, and go to state 42
    '('       shift, and go to state 43

    expr  go to state 58


State 52

   29 expr: expr '/' . expr

    ID        shift, and go to state 38
    VINT      shift, and go to state 39
    VREAL     shift, and go to state 40
    VCHAR     shift, and go to state 41
    VBOOLEAN  shift, and go to state 42
    '('       shift, and go to state 43

    expr  go to state 59


State 53

   30 expr: expr '=' . expr

    ID        shift, and go to state 38
    VINT      shift, and go to state 39
    VREAL     shift, and go to state 40
    VCHAR     shift, and go to state 41
    VBOOLEAN  shift, and go to state 42
    '('       shift, and go to state 43

    expr  go to state 60


State 54

    9 condicional: IF llistainst ELSE llistainst FI .

    $default  reduce using rule 9 (condicional)


State 55

   31 expr: '(' expr ')' .

    $default  reduce using rule 31 (expr)


State 56

   26 expr: expr . '+' expr
   26     | expr '+' expr .
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '=' expr

    '*'  shift, and go to state 51
    '/'  shift, and go to state 52
    '='  shift, and go to state 53

    $default  reduce using rule 26 (expr)


State 57

   26 expr: expr . '+' expr
   27     | expr . '-' expr
   27     | expr '-' expr .
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '=' expr

    '*'  shift, and go to state 51
    '/'  shift, and go to state 52
    '='  shift, and go to state 53

    $default  reduce using rule 27 (expr)


State 58

   26 expr: expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   28     | expr '*' expr .
   29     | expr . '/' expr
   30     | expr . '=' expr

    $default  reduce using rule 28 (expr)


State 59

   26 expr: expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   29     | expr '/' expr .
   30     | expr . '=' expr

    $default  reduce using rule 29 (expr)


State 60

   26 expr: expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '=' expr
   30     | expr '=' expr .

    $default  reduce using rule 30 (expr)
