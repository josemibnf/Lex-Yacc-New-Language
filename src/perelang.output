Grammar

    0 $accept: programa $end

    1 programa: /* empty */
    2         | INICI llistainst FINAL

    3 llistainst: /* empty */
    4           | llistainst inst
    5           | llistainst ambit

    6 ambit: INICI aux_ambit llistainst FINAL

    7 aux_ambit: /* empty */

    8 inst: ';'
    9     | decla ';'
   10     | asig ';'
   11     | error ';'

   12 decla: tipus llistaid
   13      | scope tipus llistaid

   14 scope: GLOBAL

   15 tipus: INT
   16      | REAL
   17      | CHAR
   18      | BOOLEAN

   19 llistaid: ID
   20         | llistaid ',' ID

   21 asig: ID '=' aux expr

   22 aux: /* empty */

   23 expr: expr '+' expr
   24     | expr '-' expr
   25     | expr '*' expr
   26     | expr '/' expr
   27     | '(' expr ')'
   28     | ID
   29     | VINT
   30     | VREAL
   31     | VCHAR
   32     | VBOOLEAN


Terminals, with rules where they appear

$end (0) 0
'(' (40) 27
')' (41) 27
'*' (42) 25
'+' (43) 23
',' (44) 20
'-' (45) 24
'/' (47) 26
';' (59) 8 9 10 11
'=' (61) 21
error (256) 11
ID (258) 19 20 21 28
VINT (259) 29
VREAL (260) 30
VCHAR (261) 31
VBOOLEAN (262) 32
INT (263) 15
REAL (264) 16
CHAR (265) 17
BOOLEAN (266) 18
GLOBAL (267) 14
INICI (268) 2 6
FINAL (269) 2 6


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
programa (25)
    on left: 1 2, on right: 0
llistainst (26)
    on left: 3 4 5, on right: 2 4 5 6
ambit (27)
    on left: 6, on right: 5
aux_ambit (28)
    on left: 7, on right: 6
inst (29)
    on left: 8 9 10 11, on right: 4
decla (30)
    on left: 12 13, on right: 9
scope (31)
    on left: 14, on right: 13
tipus (32)
    on left: 15 16 17 18, on right: 12 13
llistaid (33)
    on left: 19 20, on right: 12 13 20
asig (34)
    on left: 21, on right: 10
aux (35)
    on left: 22, on right: 21
expr (36)
    on left: 23 24 25 26 27 28 29 30 31 32, on right: 21 23 24 25 26
    27


state 0

    0 $accept: . programa $end

    INICI  shift, and go to state 1

    $default  reduce using rule 1 (programa)

    programa  go to state 2


state 1

    2 programa: INICI . llistainst FINAL

    $default  reduce using rule 3 (llistainst)

    llistainst  go to state 3


state 2

    0 $accept: programa . $end

    $end  shift, and go to state 4


state 3

    2 programa: INICI llistainst . FINAL
    4 llistainst: llistainst . inst
    5           | llistainst . ambit

    error    shift, and go to state 5
    ID       shift, and go to state 6
    INT      shift, and go to state 7
    REAL     shift, and go to state 8
    CHAR     shift, and go to state 9
    BOOLEAN  shift, and go to state 10
    GLOBAL   shift, and go to state 11
    INICI    shift, and go to state 12
    FINAL    shift, and go to state 13
    ';'      shift, and go to state 14

    ambit  go to state 15
    inst   go to state 16
    decla  go to state 17
    scope  go to state 18
    tipus  go to state 19
    asig   go to state 20


state 4

    0 $accept: programa $end .

    $default  accept


state 5

   11 inst: error . ';'

    ';'  shift, and go to state 21


state 6

   21 asig: ID . '=' aux expr

    '='  shift, and go to state 22


state 7

   15 tipus: INT .

    $default  reduce using rule 15 (tipus)


state 8

   16 tipus: REAL .

    $default  reduce using rule 16 (tipus)


state 9

   17 tipus: CHAR .

    $default  reduce using rule 17 (tipus)


state 10

   18 tipus: BOOLEAN .

    $default  reduce using rule 18 (tipus)


state 11

   14 scope: GLOBAL .

    $default  reduce using rule 14 (scope)


state 12

    6 ambit: INICI . aux_ambit llistainst FINAL

    $default  reduce using rule 7 (aux_ambit)

    aux_ambit  go to state 23


state 13

    2 programa: INICI llistainst FINAL .

    $default  reduce using rule 2 (programa)


state 14

    8 inst: ';' .

    $default  reduce using rule 8 (inst)


state 15

    5 llistainst: llistainst ambit .

    $default  reduce using rule 5 (llistainst)


state 16

    4 llistainst: llistainst inst .

    $default  reduce using rule 4 (llistainst)


state 17

    9 inst: decla . ';'

    ';'  shift, and go to state 24


state 18

   13 decla: scope . tipus llistaid

    INT      shift, and go to state 7
    REAL     shift, and go to state 8
    CHAR     shift, and go to state 9
    BOOLEAN  shift, and go to state 10

    tipus  go to state 25


state 19

   12 decla: tipus . llistaid

    ID  shift, and go to state 26

    llistaid  go to state 27


state 20

   10 inst: asig . ';'

    ';'  shift, and go to state 28


state 21

   11 inst: error ';' .

    $default  reduce using rule 11 (inst)


state 22

   21 asig: ID '=' . aux expr

    $default  reduce using rule 22 (aux)

    aux  go to state 29


state 23

    6 ambit: INICI aux_ambit . llistainst FINAL

    $default  reduce using rule 3 (llistainst)

    llistainst  go to state 30


state 24

    9 inst: decla ';' .

    $default  reduce using rule 9 (inst)


state 25

   13 decla: scope tipus . llistaid

    ID  shift, and go to state 26

    llistaid  go to state 31


state 26

   19 llistaid: ID .

    $default  reduce using rule 19 (llistaid)


state 27

   12 decla: tipus llistaid .
   20 llistaid: llistaid . ',' ID

    ','  shift, and go to state 32

    $default  reduce using rule 12 (decla)


state 28

   10 inst: asig ';' .

    $default  reduce using rule 10 (inst)


state 29

   21 asig: ID '=' aux . expr

    ID        shift, and go to state 33
    VINT      shift, and go to state 34
    VREAL     shift, and go to state 35
    VCHAR     shift, and go to state 36
    VBOOLEAN  shift, and go to state 37
    '('       shift, and go to state 38

    expr  go to state 39


state 30

    4 llistainst: llistainst . inst
    5           | llistainst . ambit
    6 ambit: INICI aux_ambit llistainst . FINAL

    error    shift, and go to state 5
    ID       shift, and go to state 6
    INT      shift, and go to state 7
    REAL     shift, and go to state 8
    CHAR     shift, and go to state 9
    BOOLEAN  shift, and go to state 10
    GLOBAL   shift, and go to state 11
    INICI    shift, and go to state 12
    FINAL    shift, and go to state 40
    ';'      shift, and go to state 14

    ambit  go to state 15
    inst   go to state 16
    decla  go to state 17
    scope  go to state 18
    tipus  go to state 19
    asig   go to state 20


state 31

   13 decla: scope tipus llistaid .
   20 llistaid: llistaid . ',' ID

    ','  shift, and go to state 32

    $default  reduce using rule 13 (decla)


state 32

   20 llistaid: llistaid ',' . ID

    ID  shift, and go to state 41


state 33

   28 expr: ID .

    $default  reduce using rule 28 (expr)


state 34

   29 expr: VINT .

    $default  reduce using rule 29 (expr)


state 35

   30 expr: VREAL .

    $default  reduce using rule 30 (expr)


state 36

   31 expr: VCHAR .

    $default  reduce using rule 31 (expr)


state 37

   32 expr: VBOOLEAN .

    $default  reduce using rule 32 (expr)


state 38

   27 expr: '(' . expr ')'

    ID        shift, and go to state 33
    VINT      shift, and go to state 34
    VREAL     shift, and go to state 35
    VCHAR     shift, and go to state 36
    VBOOLEAN  shift, and go to state 37
    '('       shift, and go to state 38

    expr  go to state 42


state 39

   21 asig: ID '=' aux expr .
   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 21 (asig)


state 40

    6 ambit: INICI aux_ambit llistainst FINAL .

    $default  reduce using rule 6 (ambit)


state 41

   20 llistaid: llistaid ',' ID .

    $default  reduce using rule 20 (llistaid)


state 42

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | '(' expr . ')'

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46
    ')'  shift, and go to state 47


state 43

   23 expr: expr '+' . expr

    ID        shift, and go to state 33
    VINT      shift, and go to state 34
    VREAL     shift, and go to state 35
    VCHAR     shift, and go to state 36
    VBOOLEAN  shift, and go to state 37
    '('       shift, and go to state 38

    expr  go to state 48


state 44

   24 expr: expr '-' . expr

    ID        shift, and go to state 33
    VINT      shift, and go to state 34
    VREAL     shift, and go to state 35
    VCHAR     shift, and go to state 36
    VBOOLEAN  shift, and go to state 37
    '('       shift, and go to state 38

    expr  go to state 49


state 45

   25 expr: expr '*' . expr

    ID        shift, and go to state 33
    VINT      shift, and go to state 34
    VREAL     shift, and go to state 35
    VCHAR     shift, and go to state 36
    VBOOLEAN  shift, and go to state 37
    '('       shift, and go to state 38

    expr  go to state 50


state 46

   26 expr: expr '/' . expr

    ID        shift, and go to state 33
    VINT      shift, and go to state 34
    VREAL     shift, and go to state 35
    VCHAR     shift, and go to state 36
    VBOOLEAN  shift, and go to state 37
    '('       shift, and go to state 38

    expr  go to state 51


state 47

   27 expr: '(' expr ')' .

    $default  reduce using rule 27 (expr)


state 48

   23 expr: expr . '+' expr
   23     | expr '+' expr .
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr

    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 23 (expr)


state 49

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   24     | expr '-' expr .
   25     | expr . '*' expr
   26     | expr . '/' expr

    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 24 (expr)


state 50

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   25     | expr '*' expr .
   26     | expr . '/' expr

    $default  reduce using rule 25 (expr)


state 51

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   26     | expr '/' expr .

    $default  reduce using rule 26 (expr)
