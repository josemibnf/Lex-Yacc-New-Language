Grammar

    0 $accept: programa $end

    1 programa: /* empty */
    2         | INICI llistainst FINAL

    3 llistainst: /* empty */
    4           | llistainst inst
    5           | llistainst ambit

    6 ambit: INICI aux_ambit llistainst FINAL

    7 aux_ambit: /* empty */

    8 inst: ';'
    9     | decla ';'
   10     | asig ';'
   11     | error ';'

   12 decla: tipus llistaid

   13 tipus: INT
   14      | REAL
   15      | CHAR

   16 llistaid: ID
   17         | llistaid ',' ID

   18 asig: ID '=' aux expr

   19 aux: /* empty */

   20 expr: expr '+' expr
   21     | expr '-' expr
   22     | expr '*' expr
   23     | expr '/' expr
   24     | '(' expr ')'
   25     | ID
   26     | VINT
   27     | VREAL
   28     | VCHAR


Terminals, with rules where they appear

$end (0) 0
'(' (40) 24
')' (41) 24
'*' (42) 22
'+' (43) 20
',' (44) 17
'-' (45) 21
'/' (47) 23
';' (59) 8 9 10 11
'=' (61) 18
error (256) 11
ID (258) 16 17 18 25
VINT (259) 26
VREAL (260) 27
VCHAR (261) 28
INT (262) 13
REAL (263) 14
CHAR (264) 15
INICI (265) 2 6
FINAL (266) 2 6


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
programa (22)
    on left: 1 2, on right: 0
llistainst (23)
    on left: 3 4 5, on right: 2 4 5 6
ambit (24)
    on left: 6, on right: 5
aux_ambit (25)
    on left: 7, on right: 6
inst (26)
    on left: 8 9 10 11, on right: 4
decla (27)
    on left: 12, on right: 9
tipus (28)
    on left: 13 14 15, on right: 12
llistaid (29)
    on left: 16 17, on right: 12 17
asig (30)
    on left: 18, on right: 10
aux (31)
    on left: 19, on right: 18
expr (32)
    on left: 20 21 22 23 24 25 26 27 28, on right: 18 20 21 22 23 24


state 0

    0 $accept: . programa $end

    INICI  shift, and go to state 1

    $default  reduce using rule 1 (programa)

    programa  go to state 2


state 1

    2 programa: INICI . llistainst FINAL

    $default  reduce using rule 3 (llistainst)

    llistainst  go to state 3


state 2

    0 $accept: programa . $end

    $end  shift, and go to state 4


state 3

    2 programa: INICI llistainst . FINAL
    4 llistainst: llistainst . inst
    5           | llistainst . ambit

    error  shift, and go to state 5
    ID     shift, and go to state 6
    INT    shift, and go to state 7
    REAL   shift, and go to state 8
    CHAR   shift, and go to state 9
    INICI  shift, and go to state 10
    FINAL  shift, and go to state 11
    ';'    shift, and go to state 12

    ambit  go to state 13
    inst   go to state 14
    decla  go to state 15
    tipus  go to state 16
    asig   go to state 17


state 4

    0 $accept: programa $end .

    $default  accept


state 5

   11 inst: error . ';'

    ';'  shift, and go to state 18


state 6

   18 asig: ID . '=' aux expr

    '='  shift, and go to state 19


state 7

   13 tipus: INT .

    $default  reduce using rule 13 (tipus)


state 8

   14 tipus: REAL .

    $default  reduce using rule 14 (tipus)


state 9

   15 tipus: CHAR .

    $default  reduce using rule 15 (tipus)


state 10

    6 ambit: INICI . aux_ambit llistainst FINAL

    $default  reduce using rule 7 (aux_ambit)

    aux_ambit  go to state 20


state 11

    2 programa: INICI llistainst FINAL .

    $default  reduce using rule 2 (programa)


state 12

    8 inst: ';' .

    $default  reduce using rule 8 (inst)


state 13

    5 llistainst: llistainst ambit .

    $default  reduce using rule 5 (llistainst)


state 14

    4 llistainst: llistainst inst .

    $default  reduce using rule 4 (llistainst)


state 15

    9 inst: decla . ';'

    ';'  shift, and go to state 21


state 16

   12 decla: tipus . llistaid

    ID  shift, and go to state 22

    llistaid  go to state 23


state 17

   10 inst: asig . ';'

    ';'  shift, and go to state 24


state 18

   11 inst: error ';' .

    $default  reduce using rule 11 (inst)


state 19

   18 asig: ID '=' . aux expr

    $default  reduce using rule 19 (aux)

    aux  go to state 25


state 20

    6 ambit: INICI aux_ambit . llistainst FINAL

    $default  reduce using rule 3 (llistainst)

    llistainst  go to state 26


state 21

    9 inst: decla ';' .

    $default  reduce using rule 9 (inst)


state 22

   16 llistaid: ID .

    $default  reduce using rule 16 (llistaid)


state 23

   12 decla: tipus llistaid .
   17 llistaid: llistaid . ',' ID

    ','  shift, and go to state 27

    $default  reduce using rule 12 (decla)


state 24

   10 inst: asig ';' .

    $default  reduce using rule 10 (inst)


state 25

   18 asig: ID '=' aux . expr

    ID     shift, and go to state 28
    VINT   shift, and go to state 29
    VREAL  shift, and go to state 30
    VCHAR  shift, and go to state 31
    '('    shift, and go to state 32

    expr  go to state 33


state 26

    4 llistainst: llistainst . inst
    5           | llistainst . ambit
    6 ambit: INICI aux_ambit llistainst . FINAL

    error  shift, and go to state 5
    ID     shift, and go to state 6
    INT    shift, and go to state 7
    REAL   shift, and go to state 8
    CHAR   shift, and go to state 9
    INICI  shift, and go to state 10
    FINAL  shift, and go to state 34
    ';'    shift, and go to state 12

    ambit  go to state 13
    inst   go to state 14
    decla  go to state 15
    tipus  go to state 16
    asig   go to state 17


state 27

   17 llistaid: llistaid ',' . ID

    ID  shift, and go to state 35


state 28

   25 expr: ID .

    $default  reduce using rule 25 (expr)


state 29

   26 expr: VINT .

    $default  reduce using rule 26 (expr)


state 30

   27 expr: VREAL .

    $default  reduce using rule 27 (expr)


state 31

   28 expr: VCHAR .

    $default  reduce using rule 28 (expr)


state 32

   24 expr: '(' . expr ')'

    ID     shift, and go to state 28
    VINT   shift, and go to state 29
    VREAL  shift, and go to state 30
    VCHAR  shift, and go to state 31
    '('    shift, and go to state 32

    expr  go to state 36


state 33

   18 asig: ID '=' aux expr .
   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr

    '+'  shift, and go to state 37
    '-'  shift, and go to state 38
    '*'  shift, and go to state 39
    '/'  shift, and go to state 40

    $default  reduce using rule 18 (asig)


state 34

    6 ambit: INICI aux_ambit llistainst FINAL .

    $default  reduce using rule 6 (ambit)


state 35

   17 llistaid: llistaid ',' ID .

    $default  reduce using rule 17 (llistaid)


state 36

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | '(' expr . ')'

    '+'  shift, and go to state 37
    '-'  shift, and go to state 38
    '*'  shift, and go to state 39
    '/'  shift, and go to state 40
    ')'  shift, and go to state 41


state 37

   20 expr: expr '+' . expr

    ID     shift, and go to state 28
    VINT   shift, and go to state 29
    VREAL  shift, and go to state 30
    VCHAR  shift, and go to state 31
    '('    shift, and go to state 32

    expr  go to state 42


state 38

   21 expr: expr '-' . expr

    ID     shift, and go to state 28
    VINT   shift, and go to state 29
    VREAL  shift, and go to state 30
    VCHAR  shift, and go to state 31
    '('    shift, and go to state 32

    expr  go to state 43


state 39

   22 expr: expr '*' . expr

    ID     shift, and go to state 28
    VINT   shift, and go to state 29
    VREAL  shift, and go to state 30
    VCHAR  shift, and go to state 31
    '('    shift, and go to state 32

    expr  go to state 44


state 40

   23 expr: expr '/' . expr

    ID     shift, and go to state 28
    VINT   shift, and go to state 29
    VREAL  shift, and go to state 30
    VCHAR  shift, and go to state 31
    '('    shift, and go to state 32

    expr  go to state 45


state 41

   24 expr: '(' expr ')' .

    $default  reduce using rule 24 (expr)


state 42

   20 expr: expr . '+' expr
   20     | expr '+' expr .
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr

    '*'  shift, and go to state 39
    '/'  shift, and go to state 40

    $default  reduce using rule 20 (expr)


state 43

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   21     | expr '-' expr .
   22     | expr . '*' expr
   23     | expr . '/' expr

    '*'  shift, and go to state 39
    '/'  shift, and go to state 40

    $default  reduce using rule 21 (expr)


state 44

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   22     | expr '*' expr .
   23     | expr . '/' expr

    $default  reduce using rule 22 (expr)


state 45

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   23     | expr '/' expr .

    $default  reduce using rule 23 (expr)
